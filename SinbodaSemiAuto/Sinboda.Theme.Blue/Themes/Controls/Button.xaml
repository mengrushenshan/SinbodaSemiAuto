<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sin="clr-namespace:Sinboda.Framework.Control.Controls;assembly=Sinboda.Framework.Control">

    <!--  应用于提示框、登录、  -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="{DynamicResource TitleFontSize}" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="Height" Value="40" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background="{TemplateBinding BorderBrush}" CornerRadius="4" />
                        <Border
                            Name="border"
                            Margin="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="4">
                            <Grid>
                                <Border
                                    x:Name="shadeBorder"
                                    Background="{DynamicResource ShadeColor}"
                                    BorderThickness="0"
                                    CornerRadius="4"
                                    Opacity="0" />
                                <ContentPresenter
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FF2C6EB8" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="shadeBorder" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="#FF767676" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type sin:SinButton}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="{DynamicResource TitleFontSize}" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="Height" Value="40" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background="{TemplateBinding BorderBrush}" CornerRadius="4" />
                        <Border
                            Name="border"
                            Margin="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="4">
                            <Grid>
                                <Border
                                    x:Name="shadeBorder"
                                    Background="{DynamicResource ShadeColor}"
                                    BorderThickness="0"
                                    CornerRadius="4"
                                    Opacity="0" />
                                <ContentPresenter
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FF2C6EB8" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="shadeBorder" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="#FF767676" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  一直向右按钮样式  -->
    <Style x:Key="styleBtnRightCon" TargetType="Button">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="{DynamicResource TitleFontSize}" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="Height" Value="40" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="4">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <!--  用 Path 元素定义三角形背景  -->
                            <Path
                                Width="20"
                                Height="20"
                                Margin="20,0,0,0"
                                Data=" M-15,8 L17,17 C17,17 19,18 17,19 L17,19 L-15,28 C-15,28 -17,28.2 -16,26 L-16,26 L-5,18 L-16,10 C-16,10 -17,8.5 -15,8 Z"
                                Fill="White"
                                Stretch="Fill" />

                            <Path
                                Width="20"
                                Height="20"
                                Margin="-20,0,0,0"
                                Data=" M-15,8 L17,17 C17,17 19,18 17,19 L17,19 L-15,28 C-15,28 -17,28.2 -16,26 L-16,26 L-5,18 L-16,10 C-16,10 -17,8.5 -15,8 Z"
                                Fill="White"
                                Stretch="Fill" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FF2C6EB8" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="#FF767676" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  向右按钮样式  -->
    <Style x:Key="styleBtnRight" TargetType="Button">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="{DynamicResource TitleFontSize}" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="Height" Value="40" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="4">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <!--  用 Path 元素定义三角形背景  -->
                            <Path
                                Width="20"
                                Height="20"
                                Data=" M-15,8 L17,17 C17,17 19,18 17,19 L17,19 L-15,28 C-15,28 -17,28.2 -16,26 L-16,26 L-5,18 L-16,10 C-16,10 -17,8.5 -15,8 Z"
                                Fill="White"
                                Stretch="Fill" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FF2C6EB8" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="#FF767676" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  一直向左按钮样式  -->
    <Style x:Key="styleBtnLeftCon" TargetType="Button">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="{DynamicResource TitleFontSize}" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="Height" Value="40" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="4">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Path
                                Width="20"
                                Height="20"
                                Margin="-20,0,0,0"
                                Data=" M15,8 L-17,17 C-17,17 -19,18 -17,19 L-17,19 L15,28 C15,28 17,28.2 16,26 L16,26 L5,18 L16,10 C16,10 17,8.5 15,8 Z"
                                Fill="White"
                                Stretch="Fill" />

                            <Path
                                Width="20"
                                Height="20"
                                Margin="20,0,0,0"
                                Data=" M15,8 L-17,17 C-17,17 -19,18 -17,19 L-17,19 L15,28 C15,28 17,28.2 16,26 L16,26 L5,18 L16,10 C16,10 17,8.5 15,8 Z"
                                Fill="White"
                                Stretch="Fill" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FF2C6EB8" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="#FF767676" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  向左按钮样式  -->
    <Style x:Key="styleBtnLeft" TargetType="Button">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="{DynamicResource TitleFontSize}" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="Height" Value="40" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="4">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Path
                                Width="20"
                                Height="20"
                                Data=" M15,8 L-17,17 C-17,17 -19,18 -17,19 L-17,19 L15,28 C15,28 17,28.2 16,26 L16,26 L5,18 L16,10 C16,10 17,8.5 15,8 Z"
                                Fill="White"
                                Stretch="Fill" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FF2C6EB8" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="#FF767676" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  向上按钮样式  -->
    <Style x:Key="styleBtnUp" TargetType="Button">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="{DynamicResource TitleFontSize}" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="Height" Value="80" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="4">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Path
                                Width="20"
                                Height="20"
                                Data=" M15,8 L-17,17 C-17,17 -19,18 -17,19 L-17,19 L15,28 C15,28 17,28.2 16,26 L16,26 L5,18 L16,10 C16,10 17,8.5 15,8 Z"
                                Fill="White"
                                Stretch="Fill">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="90" CenterX="10" CenterY="10" />
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FF2C6EB8" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="#FF767676" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  一直向上按钮样式  -->
    <Style x:Key="styleBtnUpCon" TargetType="Button">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="{DynamicResource TitleFontSize}" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="Height" Value="80" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="4">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Path
                                Width="20"
                                Height="20"
                                Margin="0,-20,0,0"
                                Data=" M15,8 L-17,17 C-17,17 -19,18 -17,19 L-17,19 L15,28 C15,28 17,28.2 16,26 L16,26 L5,18 L16,10 C16,10 17,8.5 15,8 Z"
                                Fill="White"
                                Stretch="Fill">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="90" CenterX="10" CenterY="10" />
                                </Path.RenderTransform>
                            </Path>

                            <Path
                                Width="20"
                                Height="20"
                                Margin="0,20,0,0"
                                Data=" M15,8 L-17,17 C-17,17 -19,18 -17,19 L-17,19 L15,28 C15,28 17,28.2 16,26 L16,26 L5,18 L16,10 C16,10 17,8.5 15,8 Z"
                                Fill="White"
                                Stretch="Fill">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="90" CenterX="10" CenterY="10" />
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FF2C6EB8" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="#FF767676" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  一直向下按钮样式  -->
    <Style x:Key="styleBtnDownCon" TargetType="Button">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="{DynamicResource TitleFontSize}" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="Height" Value="80" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="4">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Path
                                Width="20"
                                Height="20"
                                Margin="0,-20,0,0"
                                Data=" M15,8 L-17,17 C-17,17 -19,18 -17,19 L-17,19 L15,28 C15,28 17,28.2 16,26 L16,26 L5,18 L16,10 C16,10 17,8.5 15,8 Z"
                                Fill="White"
                                Stretch="Fill">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="270" CenterX="10" CenterY="10" />
                                </Path.RenderTransform>
                            </Path>

                            <Path
                                Width="20"
                                Height="20"
                                Margin="0,20,0,0"
                                Data=" M15,8 L-17,17 C-17,17 -19,18 -17,19 L-17,19 L15,28 C15,28 17,28.2 16,26 L16,26 L5,18 L16,10 C16,10 17,8.5 15,8 Z"
                                Fill="White"
                                Stretch="Fill">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="270" CenterX="10" CenterY="10" />
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FF2C6EB8" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="#FF767676" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  向下按钮样式  -->
    <Style x:Key="styleBtnDown" TargetType="Button">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="{DynamicResource TitleFontSize}" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="Height" Value="80" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="4">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Path
                                Width="20"
                                Height="20"
                                Data=" M15,8 L-17,17 C-17,17 -19,18 -17,19 L-17,19 L15,28 C15,28 17,28.2 16,26 L16,26 L5,18 L16,10 C16,10 17,8.5 15,8 Z"
                                Fill="White"
                                Stretch="Fill">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="270" CenterX="10" CenterY="10" />
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FF2C6EB8" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="#FF767676" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>