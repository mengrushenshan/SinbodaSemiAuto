<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:sin="clr-namespace:Sinboda.Framework.Control.Controls;assembly=Sinboda.Framework.Control"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sinchromes="clr-namespace:Sinboda.Framework.Control.Chromes;assembly=Sinboda.Framework.Control" >

    <Geometry x:Key="DownArrowGeometry">M 0 0 L 5 5.5 L 10 0 Z</Geometry>

    <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border HorizontalAlignment="Stretch" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="Arrow">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="180">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseIn"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="Arrow">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" 
                              RenderTransformOrigin="0.5,0.5"
                              Margin="8,0"
                              Fill="#FF999999" HorizontalAlignment="Right" VerticalAlignment="Center">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Arrow" Property="Fill" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="5,10"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="#FFF1F1F1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0,1,0,0"
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="#FFD1DEED"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" 
                                  HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type sin:SinComboBox}">
        <Grid x:Name="Placement" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" 
                   SnapsToDevicePixels="True"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                   Margin="1" PopupAnimation="Slide" Placement="Bottom">
                <Border x:Name="DropDownBorder" 
                        BorderBrush="{DynamicResource BoxMouseOverBorderBrush}" 
                        BorderThickness="1,0,1,1" 
                        MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                        MinWidth="{Binding ActualWidth, ElementName=Placement}"
                        SnapsToDevicePixels="true"
                        Background="White" CornerRadius="0,0,2,2">
                    <ScrollViewer x:Name="DropDownScrollViewer" Margin="0,0,0,1">
                        <Grid RenderOptions.ClearTypeHint="Enabled">
                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" 
                                           Height="{Binding ActualHeight, ElementName=DropDownBorder}" 
                                           Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>

            <sinchromes:ButtonChrome Name="bc" Style="{DynamicResource EditChrome}"
                             RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"  
                             BorderBrush="{TemplateBinding BorderBrush}"
                             Background="{TemplateBinding Background}"
                             RenderMouseOver="{TemplateBinding IsMouseOver}"
                             Grid.ColumnSpan="2"/>

            <Border Name="borderNull" Visibility="Collapsed" SnapsToDevicePixels="True" Grid.Column="0">
                <TextBlock Margin="5,0" Name="txtNull" Visibility="Collapsed" IsHitTestVisible="False" Foreground="{DynamicResource BoxWatermarkBrush}" 
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                           Text="{TemplateBinding NullText}"/>
            </Border>

            <ToggleButton Margin="0,0,1,0"
                          Grid.Column="1"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxReadonlyToggleButton}"/>

            <sin:SinTextBox x:Name="PART_EditableTextBox"  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"  
                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                     Margin="{TemplateBinding Padding}" 
                     Style="{StaticResource ComboBoxEditableTextBox}"
                     MaxLength="{TemplateBinding MaxLength}"
                     RegexText="{TemplateBinding RegexText}"
                    IsDataErrorCannotInput="{TemplateBinding IsDataErrorCannotInput}"
                     RegexTextErrorMsg="{TemplateBinding RegexTextErrorMsg}"
                     RegexTextPattern="{TemplateBinding RegexTextPattern}"
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>

            <Rectangle x:Name="rectangle" Width="1" Fill="Silver" Grid.Column="1" HorizontalAlignment="Left" Margin="0,3"/>

        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="true">
                <Setter Property="CornerRadius" TargetName="bc" Value="2,2,0,0"/>
                <Setter Property="BorderThickness" TargetName="bc" Value="1,1,1,0"/>
                <Setter Property="BorderBrush" TargetName="bc" Value="{DynamicResource BoxMouseOverBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{DynamicResource BoxNotEnableBackground}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="false">
                <Setter TargetName="txtNull"  Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="Text" Value="">
                <Setter TargetName="borderNull"  Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsDataError" Value="true">
                <Setter Property="BorderBrush" Value="Red"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <!--<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>-->
            </Trigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type sin:SinComboBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BoxBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Padding" Value="5,0,0,0"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type sin:SinComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto" x:Name="errorGlyphIcon"/>
                            <ColumnDefinition Width="22"/>
                        </Grid.ColumnDefinitions>

                        <sinchromes:ButtonChrome Name="bc" Style="{DynamicResource EditChrome}"
                                         RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"  
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         Background="{TemplateBinding Background}"
                                         RenderMouseOver="{TemplateBinding IsMouseOver}" Grid.ColumnSpan="3"/> 

                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="3" 
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                               SnapsToDevicePixels="True"
                               Margin="10" PopupAnimation="Slide" Placement="Bottom">
                            <Border x:Name="DropDownBorder" 
                                    BorderBrush="{DynamicResource BoxMouseOverBorderBrush}" 
                                    BorderThickness="1,1,1,1" 
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                    MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                                    SnapsToDevicePixels="True"
                                    Background="White" CornerRadius="0,0,2,2">
                                
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <sin:SinTextBox Visibility="{TemplateBinding AllowSearch}" GlyphIcon="Glyphicon-Search"  x:Name="PART_Search" Margin="4" Width="{Binding ActualWidth, ElementName=MainGrid}"/>
                                    <ScrollViewer Grid.Row="1" x:Name="DropDownScrollViewer" Margin="0,0,0,1">
                                        <Grid RenderOptions.ClearTypeHint="Enabled" SnapsToDevicePixels="True">
                                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" 
                                                       Height="{Binding ActualHeight, ElementName=DropDownBorder}" 
                                                       Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter"
                                                        KeyboardNavigation.DirectionalNavigation="Contained" 
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Grid>
                            </Border>
                        </Popup>

                        <ToggleButton BorderBrush="{TemplateBinding BorderBrush}" 
                                      Background="{TemplateBinding Background}" 
                                      Grid.ColumnSpan="3" 
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Style="{StaticResource ComboBoxReadonlyToggleButton}"/>

                        <Border Name="borderNull" Visibility="Collapsed" SnapsToDevicePixels="True">
                            <TextBlock Margin="5,0"
                                       Name="txtNull"
                                       IsHitTestVisible="False"
                                       Foreground="{DynamicResource BoxWatermarkBrush}" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                       Text="{TemplateBinding NullText}"/>
                        </Border>

                        <Grid Grid.Column="0">
                            <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Content="{TemplateBinding SelectionBoxItem}" 
                                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              IsHitTestVisible="false" 
                                              Margin="{TemplateBinding Padding}" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource BoxNotEnableBackground}"/>
                        </Trigger>
                        <Trigger Property="SelectedIndex" Value="-1">
                            <Setter TargetName="borderNull"  Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="true">
                            <Setter Property="CornerRadius" TargetName="bc" Value="2,2,0,0"/>
                            <Setter Property="BorderThickness" TargetName="bc" Value="1,1,1,1"/>
                            <Setter Property="BorderBrush" TargetName="bc" Value="{DynamicResource BoxMouseOverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsDataError" Value="true">
                            <Setter Property="BorderBrush" Value="Red"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="3"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>